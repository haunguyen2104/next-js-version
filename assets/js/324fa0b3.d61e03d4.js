"use strict";(self.webpackChunknext_version=self.webpackChunknext_version||[]).push([[7116],{9888:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var r=n(5893),o=n(1151);const s={description:"You can use shallow routing to change the URL without triggering a new page change. Learn more here."},a="Shallow Routing",i={id:"next-js/v13.0.1/routing/shallow-routing",title:"Shallow Routing",description:"You can use shallow routing to change the URL without triggering a new page change. Learn more here.",source:"@site/docs/next-js/v13.0.1/routing/shallow-routing.md",sourceDirName:"next-js/v13.0.1/routing",slug:"/next-js/v13.0.1/routing/shallow-routing",permalink:"/next-js/v13.0.1/routing/shallow-routing",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/next-js/v13.0.1/routing/shallow-routing.md",tags:[],version:"current",frontMatter:{description:"You can use shallow routing to change the URL without triggering a new page change. Learn more here."},sidebar:"tutorialSidebar",previous:{title:"Routing",permalink:"/next-js/v13.0.1/routing/introduction"},next:{title:"Testing",permalink:"/next-js/v13.0.1/testing"}},c={},l=[{value:"Caveats",id:"caveats",level:2}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components},{Details:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"shallow-routing",children:"Shallow Routing"}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsx)("summary",{children:(0,r.jsx)("b",{children:"Examples"})}),(0,r.jsx)("ul",{children:(0,r.jsx)("li",{children:(0,r.jsx)("a",{href:"https://github.com/vercel/next.js/tree/canary/examples/with-shallow-routing",children:"Shallow Routing"})})})]}),"\n",(0,r.jsxs)(t.p,{children:["Shallow routing allows you to change the URL without running data fetching methods again, that includes ",(0,r.jsx)(t.a,{href:"/docs/basic-features/data-fetching/get-server-side-props.md",children:(0,r.jsx)(t.code,{children:"getServerSideProps"})}),", ",(0,r.jsx)(t.a,{href:"/docs/basic-features/data-fetching/get-static-props.md",children:(0,r.jsx)(t.code,{children:"getStaticProps"})}),", and ",(0,r.jsx)(t.a,{href:"/docs/api-reference/data-fetching/get-initial-props.md",children:(0,r.jsx)(t.code,{children:"getInitialProps"})}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["You'll receive the updated ",(0,r.jsx)(t.code,{children:"pathname"})," and the ",(0,r.jsx)(t.code,{children:"query"})," via the ",(0,r.jsxs)(t.a,{href:"/docs/api-reference/next/router.md#router-object",children:[(0,r.jsx)(t.code,{children:"router"})," object"]})," (added by ",(0,r.jsx)(t.a,{href:"/docs/api-reference/next/router.md#useRouter",children:(0,r.jsx)(t.code,{children:"useRouter"})})," or ",(0,r.jsx)(t.a,{href:"/docs/api-reference/next/router.md#withRouter",children:(0,r.jsx)(t.code,{children:"withRouter"})}),"), without losing state."]}),"\n",(0,r.jsxs)(t.p,{children:["To enable shallow routing, set the ",(0,r.jsx)(t.code,{children:"shallow"})," option to ",(0,r.jsx)(t.code,{children:"true"}),". Consider the following example:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-jsx",children:"import { useEffect } from 'react'\nimport { useRouter } from 'next/router'\n\n// Current URL is '/'\nfunction Page() {\n  const router = useRouter()\n\n  useEffect(() => {\n    // Always do navigations after the first render\n    router.push('/?counter=10', undefined, { shallow: true })\n  }, [])\n\n  useEffect(() => {\n    // The counter changed!\n  }, [router.query.counter])\n}\n\nexport default Page\n"})}),"\n",(0,r.jsxs)(t.p,{children:["The URL will get updated to ",(0,r.jsx)(t.code,{children:"/?counter=10"}),". and the page won't get replaced, only the state of the route is changed."]}),"\n",(0,r.jsxs)(t.p,{children:["You can also watch for URL changes via ",(0,r.jsx)(t.a,{href:"https://reactjs.org/docs/react-component.html#componentdidupdate",children:(0,r.jsx)(t.code,{children:"componentDidUpdate"})})," as shown below:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-jsx",children:"componentDidUpdate(prevProps) {\n  const { pathname, query } = this.props.router\n  // verify props have changed to avoid an infinite loop\n  if (query.counter !== prevProps.router.query.counter) {\n    // fetch data based on the new query\n  }\n}\n"})}),"\n",(0,r.jsx)(t.h2,{id:"caveats",children:"Caveats"}),"\n",(0,r.jsxs)(t.p,{children:["Shallow routing ",(0,r.jsx)(t.strong,{children:"only"})," works for URL changes in the current page. For example, let's assume we have another page called ",(0,r.jsx)(t.code,{children:"pages/about.js"}),", and you run this:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-jsx",children:"router.push('/?counter=10', '/about?counter=10', { shallow: true })\n"})}),"\n",(0,r.jsx)(t.p,{children:"Since that's a new page, it'll unload the current page, load the new one and wait for data fetching even though we asked to do shallow routing."}),"\n",(0,r.jsx)(t.p,{children:"When shallow routing is used with middleware it will not ensure the new page matches the current page like previously done without middleware. This is due to middleware being able to rewrite dynamically and can't be verified client-side without a data fetch which is skipped with shallow, so a shallow route change must always be treated as shallow."})]})}function d(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>i,a:()=>a});var r=n(7294);const o={},s=r.createContext(o);function a(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);