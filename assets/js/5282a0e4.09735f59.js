"use strict";(self.webpackChunknext_version=self.webpackChunknext_version||[]).push([[6778],{470:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var s=n(5893),a=n(1151);const i={description:"Fetch data and generate static pages with `getStaticProps`. Learn more about this API for data fetching in Next.js."},r="getStaticPaths",c={id:"next-js/v13.0.0/basic-features/data-fetching/get-static-paths",title:"getStaticPaths",description:"Fetch data and generate static pages with `getStaticProps`. Learn more about this API for data fetching in Next.js.",source:"@site/docs/next-js/v13.0.0/basic-features/data-fetching/get-static-paths.md",sourceDirName:"next-js/v13.0.0/basic-features/data-fetching",slug:"/next-js/v13.0.0/basic-features/data-fetching/get-static-paths",permalink:"/next-js/v13.0.0/basic-features/data-fetching/get-static-paths",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/next-js/v13.0.0/basic-features/data-fetching/get-static-paths.md",tags:[],version:"current",frontMatter:{description:"Fetch data and generate static pages with `getStaticProps`. Learn more about this API for data fetching in Next.js."},sidebar:"tutorialSidebar",previous:{title:"getServerSideProps",permalink:"/next-js/v13.0.0/basic-features/data-fetching/get-server-side-props"},next:{title:"getStaticProps",permalink:"/next-js/v13.0.0/basic-features/data-fetching/get-static-props"}},o={},d=[{value:"When should I use getStaticPaths?",id:"when-should-i-use-getstaticpaths",level:2},{value:"When does getStaticPaths run",id:"when-does-getstaticpaths-run",level:2},{value:"How does getStaticProps run with regards to getStaticPaths",id:"how-does-getstaticprops-run-with-regards-to-getstaticpaths",level:3},{value:"Where can I use getStaticPaths",id:"where-can-i-use-getstaticpaths",level:2},{value:"Runs on every request in development",id:"runs-on-every-request-in-development",level:2},{value:"Generating paths on-demand",id:"generating-paths-on-demand",level:2},{value:"Related",id:"related",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"getstaticpaths",children:"getStaticPaths"}),"\n",(0,s.jsxs)(t.p,{children:["If a page has ",(0,s.jsx)(t.a,{href:"/docs/routing/dynamic-routes.md",children:"Dynamic Routes"})," and uses ",(0,s.jsx)(t.code,{children:"getStaticProps"}),", it needs to define a list of paths to be statically generated."]}),"\n",(0,s.jsxs)(t.p,{children:["When you export a function called ",(0,s.jsx)(t.code,{children:"getStaticPaths"})," (Static Site Generation) from a page that uses dynamic routes, Next.js will statically pre-render all the paths specified by ",(0,s.jsx)(t.code,{children:"getStaticPaths"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx",children:"// pages/posts/[id].js\n\n// Generates `/posts/1` and `/posts/2`\nexport async function getStaticPaths() {\n  return {\n    paths: [{ params: { id: '1' } }, { params: { id: '2' } }],\n    fallback: false, // can also be true or 'blocking'\n  }\n}\n\n// `getStaticPaths` requires using `getStaticProps`\nexport async function getStaticProps(context) {\n  return {\n    // Passed to the page component as props\n    props: { post: {} },\n  }\n}\n\nexport default function Post({ post }) {\n  // Render post...\n}\n"})}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsxs)(t.a,{href:"/docs/api-reference/data-fetching/get-static-paths.md",children:[(0,s.jsx)(t.code,{children:"getStaticPaths"})," API reference"]})," covers all parameters and props that can be used with ",(0,s.jsx)(t.code,{children:"getStaticPaths"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"when-should-i-use-getstaticpaths",children:"When should I use getStaticPaths?"}),"\n",(0,s.jsxs)(t.p,{children:["You should use ",(0,s.jsx)(t.code,{children:"getStaticPaths"})," if you\u2019re statically pre-rendering pages that use dynamic routes and:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"The data comes from a headless CMS"}),"\n",(0,s.jsx)(t.li,{children:"The data comes from a database"}),"\n",(0,s.jsx)(t.li,{children:"The data comes from the filesystem"}),"\n",(0,s.jsx)(t.li,{children:"The data can be publicly cached (not user-specific)"}),"\n",(0,s.jsxs)(t.li,{children:["The page must be pre-rendered (for SEO) and be very fast \u2014 ",(0,s.jsx)(t.code,{children:"getStaticProps"})," generates ",(0,s.jsx)(t.code,{children:"HTML"})," and ",(0,s.jsx)(t.code,{children:"JSON"})," files, both of which can be cached by a CDN for performance"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"when-does-getstaticpaths-run",children:"When does getStaticPaths run"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"getStaticPaths"})," will only run during build in production, it will not be called during runtime. You can validate code written inside ",(0,s.jsx)(t.code,{children:"getStaticPaths"})," is removed from the client-side bundle ",(0,s.jsx)(t.a,{href:"https://next-code-elimination.vercel.app/",children:"with this tool"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"how-does-getstaticprops-run-with-regards-to-getstaticpaths",children:"How does getStaticProps run with regards to getStaticPaths"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"getStaticProps"})," runs during ",(0,s.jsx)(t.code,{children:"next build"})," for any ",(0,s.jsx)(t.code,{children:"paths"})," returned during build"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"getStaticProps"})," runs in the background when using ",(0,s.jsx)(t.code,{children:"fallback: true"})]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"getStaticProps"})," is called before initial render when using ",(0,s.jsx)(t.code,{children:"fallback: blocking"})]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"where-can-i-use-getstaticpaths",children:"Where can I use getStaticPaths"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"getStaticPaths"})," ",(0,s.jsx)(t.strong,{children:"must"})," be used with ",(0,s.jsx)(t.code,{children:"getStaticProps"})]}),"\n",(0,s.jsxs)(t.li,{children:["You ",(0,s.jsx)(t.strong,{children:"cannot"})," use ",(0,s.jsx)(t.code,{children:"getStaticPaths"})," with ",(0,s.jsx)(t.a,{href:"/docs/basic-features/data-fetching/get-server-side-props.md",children:(0,s.jsx)(t.code,{children:"getServerSideProps"})})]}),"\n",(0,s.jsxs)(t.li,{children:["You can export ",(0,s.jsx)(t.code,{children:"getStaticPaths"})," from a ",(0,s.jsx)(t.a,{href:"/docs/routing/dynamic-routes.md",children:"Dynamic Route"})," that also uses ",(0,s.jsx)(t.code,{children:"getStaticProps"})]}),"\n",(0,s.jsxs)(t.li,{children:["You ",(0,s.jsx)(t.strong,{children:"cannot"})," export ",(0,s.jsx)(t.code,{children:"getStaticPaths"})," from non-page file (e.g. your ",(0,s.jsx)(t.code,{children:"components"})," folder)"]}),"\n",(0,s.jsxs)(t.li,{children:["You must export ",(0,s.jsx)(t.code,{children:"getStaticPaths"})," as a standalone function, and not a property of the page component"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"runs-on-every-request-in-development",children:"Runs on every request in development"}),"\n",(0,s.jsxs)(t.p,{children:["In development (",(0,s.jsx)(t.code,{children:"next dev"}),"), ",(0,s.jsx)(t.code,{children:"getStaticPaths"})," will be called on every request."]}),"\n",(0,s.jsx)(t.h2,{id:"generating-paths-on-demand",children:"Generating paths on-demand"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"getStaticPaths"})," allows you to control which pages are generated during the build instead of on-demand with ",(0,s.jsx)(t.a,{href:"/docs/api-reference/data-fetching/get-static-paths.md#fallback-blocking",children:(0,s.jsx)(t.code,{children:"fallback"})}),". Generating more pages during a build will cause slower builds."]}),"\n",(0,s.jsxs)(t.p,{children:["You can defer generating all pages on-demand by returning an empty array for ",(0,s.jsx)(t.code,{children:"paths"}),". This can be especially helpful when deploying your Next.js application to multiple environments. For example, you can have faster builds by generating all pages on-demand for previews (but not production builds). This is helpful for sites with hundreds/thousands of static pages."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx",children:"// pages/posts/[id].js\n\nexport async function getStaticPaths() {\n  // When this is true (in preview environments) don't\n  // prerender any static pages\n  // (faster builds, but slower initial page load)\n  if (process.env.SKIP_BUILD_STATIC_GENERATION) {\n    return {\n      paths: [],\n      fallback: 'blocking',\n    }\n  }\n\n  // Call an external API endpoint to get posts\n  const res = await fetch('https://.../posts')\n  const posts = await res.json()\n\n  // Get the paths we want to prerender based on posts\n  // In production environments, prerender all pages\n  // (slower builds, but faster initial page load)\n  const paths = posts.map((post) => ({\n    params: { id: post.id },\n  }))\n\n  // { fallback: false } means other routes should 404\n  return { paths, fallback: false }\n}\n"})}),"\n",(0,s.jsx)(t.h2,{id:"related",children:"Related"}),"\n",(0,s.jsx)(t.p,{children:"For more information on what to do next, we recommend the following sections:"}),"\n",(0,s.jsx)("div",{class:"card",children:(0,s.jsxs)("a",{href:"/docs/api-reference/data-fetching/get-static-paths.md",children:[(0,s.jsx)("b",{children:"getStaticPaths API Reference"}),(0,s.jsx)("small",{children:"Read the API Reference for getStaticPaths"})]})})]})}function h(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>c,a:()=>r});var s=n(7294);const a={},i=s.createContext(a);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);