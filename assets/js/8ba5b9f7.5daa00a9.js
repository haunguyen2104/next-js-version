"use strict";(self.webpackChunknext_version=self.webpackChunknext_version||[]).push([[1786],{6233:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>r,default:()=>u,frontMatter:()=>d,metadata:()=>c,toc:()=>a});var s=t(5893),o=t(1151);const d={description:"Extend the default document markup added by Next.js."},r="Custom Document",c={id:"next-js/v13.0.1/advanced-features/custom-document",title:"Custom Document",description:"Extend the default document markup added by Next.js.",source:"@site/docs/next-js/v13.0.1/advanced-features/custom-document.md",sourceDirName:"next-js/v13.0.1/advanced-features",slug:"/next-js/v13.0.1/advanced-features/custom-document",permalink:"/next-js/v13.0.1/advanced-features/custom-document",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/next-js/v13.0.1/advanced-features/custom-document.md",tags:[],version:"current",frontMatter:{description:"Extend the default document markup added by Next.js."},sidebar:"tutorialSidebar",previous:{title:"Custom App",permalink:"/next-js/v13.0.1/advanced-features/custom-app"},next:{title:"Custom Error Page",permalink:"/next-js/v13.0.1/advanced-features/custom-error-page"}},i={},a=[{value:"Caveats",id:"caveats",level:2},{value:"Customizing <code>renderPage</code>",id:"customizing-renderpage",level:2},{value:"TypeScript",id:"typescript",level:2}];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"custom-document",children:["Custom ",(0,s.jsx)(n.code,{children:"Document"})]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note"}),": Next.js 13 introduces the ",(0,s.jsx)(n.code,{children:"app/"})," directory (beta). This new directory has support for layouts, nested routes, and uses Server Components by default. Inside ",(0,s.jsx)(n.code,{children:"app/"}),", you can modify the initial ",(0,s.jsx)(n.code,{children:"html"})," and ",(0,s.jsx)(n.code,{children:"body"})," tags using a root layout."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.a,{href:"https://beta.nextjs.org/docs/upgrade-guide",children:["Learn more about incrementally adopting ",(0,s.jsx)(n.code,{children:"app/"})]}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["A custom ",(0,s.jsx)(n.code,{children:"Document"})," can update the ",(0,s.jsx)(n.code,{children:"<html>"})," and ",(0,s.jsx)(n.code,{children:"<body>"})," tags used to render a ",(0,s.jsx)(n.a,{href:"/docs/basic-features/pages.md",children:"Page"}),". This file is only rendered on the server, so event handlers like ",(0,s.jsx)(n.code,{children:"onClick"})," cannot be used in ",(0,s.jsx)(n.code,{children:"_document"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["To override the default ",(0,s.jsx)(n.code,{children:"Document"}),", create the file ",(0,s.jsx)(n.code,{children:"pages/_document.js"})," as shown below:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"import { Html, Head, Main, NextScript } from 'next/document'\n\nexport default function Document() {\n  return (\n    <Html>\n      <Head />\n      <body>\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  )\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The code above is the default ",(0,s.jsx)(n.code,{children:"Document"})," added by Next.js. Custom attributes are allowed as props. For example, we might want to add ",(0,s.jsx)(n.code,{children:'lang="en"'})," to the ",(0,s.jsx)(n.code,{children:"<html>"})," tag:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'<Html lang="en">\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Or add a ",(0,s.jsx)(n.code,{children:"className"})," to the ",(0,s.jsx)(n.code,{children:"body"})," tag:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'<body className="bg-white">\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"<Html>"}),", ",(0,s.jsx)(n.code,{children:"<Head />"}),", ",(0,s.jsx)(n.code,{children:"<Main />"})," and ",(0,s.jsx)(n.code,{children:"<NextScript />"})," are required for the page to be properly rendered."]}),"\n",(0,s.jsx)(n.h2,{id:"caveats",children:"Caveats"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"<Head />"})," component used in ",(0,s.jsx)(n.code,{children:"_document"})," is not the same as ",(0,s.jsx)(n.a,{href:"/docs/api-reference/next/head.md",children:(0,s.jsx)(n.code,{children:"next/head"})}),". The ",(0,s.jsx)(n.code,{children:"<Head />"})," component used here should only be used for any ",(0,s.jsx)(n.code,{children:"<head>"})," code that is common for all pages. For all other cases, such as ",(0,s.jsx)(n.code,{children:"<title>"})," tags, we recommend using ",(0,s.jsx)(n.a,{href:"/docs/api-reference/next/head.md",children:(0,s.jsx)(n.code,{children:"next/head"})})," in your pages or components."]}),"\n",(0,s.jsxs)(n.li,{children:["React components outside of ",(0,s.jsx)(n.code,{children:"<Main />"})," will not be initialized by the browser. Do ",(0,s.jsx)(n.em,{children:"not"})," add application logic here or custom CSS (like ",(0,s.jsx)(n.code,{children:"styled-jsx"}),"). If you need shared components in all your pages (like a menu or a toolbar), read ",(0,s.jsx)(n.a,{href:"/docs/basic-features/layouts.md",children:"Layouts"})," instead."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Document"})," currently does not support Next.js ",(0,s.jsx)(n.a,{href:"/docs/basic-features/data-fetching/overview.md",children:"Data Fetching methods"})," like ",(0,s.jsx)(n.a,{href:"/docs/basic-features/data-fetching/get-static-props.md",children:(0,s.jsx)(n.code,{children:"getStaticProps"})})," or ",(0,s.jsx)(n.a,{href:"/docs/basic-features/data-fetching/get-server-side-props.md",children:(0,s.jsx)(n.code,{children:"getServerSideProps"})}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"customizing-renderpage",children:["Customizing ",(0,s.jsx)(n.code,{children:"renderPage"})]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note:"})," This is advanced and only needed for libraries like CSS-in-JS to support server-side rendering. This is not needed for built-in ",(0,s.jsx)(n.code,{children:"styled-jsx"})," support."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["For ",(0,s.jsx)(n.a,{href:"/docs/advanced-features/react-18.md",children:"React 18"})," support, we recommend avoiding customizing ",(0,s.jsx)(n.code,{children:"getInitialProps"})," and ",(0,s.jsx)(n.code,{children:"renderPage"}),", if possible."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"ctx"})," object shown below is equivalent to the one received in ",(0,s.jsx)(n.a,{href:"/docs/api-reference/data-fetching/get-initial-props.md#context-object",children:(0,s.jsx)(n.code,{children:"getInitialProps"})}),", with the addition of ",(0,s.jsx)(n.code,{children:"renderPage"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"import Document, { Html, Head, Main, NextScript } from 'next/document'\n\nclass MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    const originalRenderPage = ctx.renderPage\n\n    // Run the React rendering logic synchronously\n    ctx.renderPage = () =>\n      originalRenderPage({\n        // Useful for wrapping the whole react tree\n        enhanceApp: (App) => App,\n        // Useful for wrapping in a per-page basis\n        enhanceComponent: (Component) => Component,\n      })\n\n    // Run the parent `getInitialProps`, it now includes the custom `renderPage`\n    const initialProps = await Document.getInitialProps(ctx)\n\n    return initialProps\n  }\n\n  render() {\n    return (\n      <Html>\n        <Head />\n        <body>\n          <Main />\n          <NextScript />\n        </body>\n      </Html>\n    )\n  }\n}\n\nexport default MyDocument\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note"}),": ",(0,s.jsx)(n.code,{children:"getInitialProps"})," in ",(0,s.jsx)(n.code,{children:"_document"})," is not called during client-side transitions."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"typescript",children:"TypeScript"}),"\n",(0,s.jsxs)(n.p,{children:["You can use the built-in ",(0,s.jsx)(n.code,{children:"DocumentContext"})," type and change the file name to ",(0,s.jsx)(n.code,{children:"./pages/_document.tsx"})," like so:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import Document, { DocumentContext, DocumentInitialProps } from 'next/document'\n\nclass MyDocument extends Document {\n  static async getInitialProps(\n    ctx: DocumentContext\n  ): Promise<DocumentInitialProps> {\n    const initialProps = await Document.getInitialProps(ctx)\n\n    return initialProps\n  }\n}\n\nexport default MyDocument\n"})})]})}function u(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>r});var s=t(7294);const o={},d=s.createContext(o);function r(e){const n=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(d.Provider,{value:n},e.children)}}}]);