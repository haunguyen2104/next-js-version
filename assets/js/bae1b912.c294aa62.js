"use strict";(self.webpackChunknext_version=self.webpackChunknext_version||[]).push([[4719],{4343:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var s=t(5893),o=t(1151);const i={description:"Learn how to use @next/mdx in your Next.js project."},r="Using MDX with Next.js",a={id:"next-js/v13.0.1/advanced-features/using-mdx",title:"Using MDX with Next.js",description:"Learn how to use @next/mdx in your Next.js project.",source:"@site/docs/next-js/v13.0.1/advanced-features/using-mdx.md",sourceDirName:"next-js/v13.0.1/advanced-features",slug:"/next-js/v13.0.1/advanced-features/using-mdx",permalink:"/next-js/v13.0.1/advanced-features/using-mdx",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/next-js/v13.0.1/advanced-features/using-mdx.md",tags:[],version:"current",frontMatter:{description:"Learn how to use @next/mdx in your Next.js project."},sidebar:"tutorialSidebar",previous:{title:"Turbopack (alpha)",permalink:"/next-js/v13.0.1/advanced-features/turbopack"},next:{title:"Next.js CLI",permalink:"/next-js/v13.0.1/api-reference/cli"}},d={},c=[{value:"Why use MDX?",id:"why-use-mdx",level:2},{value:"MDX Plugins",id:"mdx-plugins",level:2},{value:"<code>@next/mdx</code>",id:"nextmdx",level:2},{value:"Setup <code>@next/mdx</code> in Next.js",id:"setup-nextmdx-in-nextjs",level:3},{value:"Using Components, Layouts and Custom Elements",id:"using-components-layouts-and-custom-elements",level:2},{value:"Frontmatter",id:"frontmatter",level:3},{value:"Layouts",id:"layouts",level:3},{value:"Custom Elements",id:"custom-elements",level:3},{value:"Helpful Links",id:"helpful-links",level:2}];function l(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"using-mdx-with-nextjs",children:"Using MDX with Next.js"}),"\n",(0,s.jsx)(n.p,{children:"MDX is a superset of markdown that lets you write JSX directly in your markdown files. It is a powerful way to add dynamic interactivity, and embed components within your content, helping you to bring your pages to life."}),"\n",(0,s.jsx)(n.p,{children:"Next.js supports MDX through a number of different means, this page will outline some of the ways you can begin integrating MDX into your Next.js project."}),"\n",(0,s.jsx)(n.h2,{id:"why-use-mdx",children:"Why use MDX?"}),"\n",(0,s.jsxs)(n.p,{children:["Authoring in markdown is an intuitive way to write content, its terse syntax, once adopted, can enable you to write content that is both readable and maintainable. Because you can use ",(0,s.jsx)(n.code,{children:"HTML"})," elements in your markdown, you can also get creative when styling your markdown pages."]}),"\n",(0,s.jsxs)(n.p,{children:["However, because markdown is essentially static content, you can't create ",(0,s.jsx)(n.em,{children:"dynamic"})," content based on user interactivity. Where MDX shines is in its ability to let you create and use your React components directly in the markup. This opens up a wide range of possibilities when composing your sites pages with interactivity in mind."]}),"\n",(0,s.jsx)(n.h2,{id:"mdx-plugins",children:"MDX Plugins"}),"\n",(0,s.jsxs)(n.p,{children:["Internally MDX uses remark and rehype. Remark is a markdown processor powered by a plugins ecosystem. This plugin ecosystem lets you parse code, transform ",(0,s.jsx)(n.code,{children:"HTML"})," elements, change syntax, extract frontmatter, and more. Using ",(0,s.jsx)(n.a,{href:"https://mdxjs.com/guides/gfm/",children:"remark-gfm to enable GitHub flavored markdown (GFM)"})," is a popular option."]}),"\n",(0,s.jsxs)(n.p,{children:["Rehype is an ",(0,s.jsx)(n.code,{children:"HTML"})," processor, also powered by a plugin ecosystem. Similar to remark, these plugins let you manipulate, sanitize, compile and configure all types of data, elements and content."]}),"\n",(0,s.jsx)(n.p,{children:"To use a plugin from either remark or rehype, you will need to add it to the MDX packages config."}),"\n",(0,s.jsx)(n.h2,{id:"nextmdx",children:(0,s.jsx)(n.code,{children:"@next/mdx"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"@next/mdx"})," package is configured in the ",(0,s.jsx)(n.code,{children:"next.config.js"})," file at your projects root. ",(0,s.jsx)(n.strong,{children:"It sources data from local files"}),", allowing you to create pages with a ",(0,s.jsx)(n.code,{children:".mdx"})," extension, directly in your ",(0,s.jsx)(n.code,{children:"/pages"})," directory."]}),"\n",(0,s.jsxs)(n.h3,{id:"setup-nextmdx-in-nextjs",children:["Setup ",(0,s.jsx)(n.code,{children:"@next/mdx"})," in Next.js"]}),"\n",(0,s.jsxs)(n.p,{children:["The following steps outline how to setup ",(0,s.jsx)(n.code,{children:"@next/mdx"})," in your Next.js project:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Install the required packages:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"  npm install @next/mdx @mdx-js/loader @mdx-js/react\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Require the package and configure to support top level ",(0,s.jsx)(n.code,{children:".mdx"})," pages. The following adds the ",(0,s.jsx)(n.code,{children:"options"})," object key allowing you to pass in any plugins:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// next.config.js\n\nconst withMDX = require('@next/mdx')({\n  extension: /\\.mdx?$/,\n  options: {\n    // If you use remark-gfm, you'll need to use next.config.mjs\n    // as the package is ESM only\n    // https://github.com/remarkjs/remark-gfm#install\n    remarkPlugins: [],\n    rehypePlugins: [],\n    // If you use `MDXProvider`, uncomment the following line.\n    // providerImportSource: \"@mdx-js/react\",\n  },\n})\nmodule.exports = withMDX({\n  // Append the default value with md extensions\n  pageExtensions: ['ts', 'tsx', 'js', 'jsx', 'md', 'mdx'],\n})\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Create a new MDX page within the ",(0,s.jsx)(n.code,{children:"/pages"})," directory:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"  - /pages\n    - my-mdx-page.mdx\n  - package.json\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"using-components-layouts-and-custom-elements",children:"Using Components, Layouts and Custom Elements"}),"\n",(0,s.jsx)(n.p,{children:"You can now import a React component directly inside your MDX page:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-md",children:"import { MyComponent } from 'my-components'\n\n# My MDX page\n\nThis is a list in markdown:\n\n- One\n- Two\n- Three\n\nCheckout my React component:\n\n<MyComponent/>\n"})}),"\n",(0,s.jsx)(n.h3,{id:"frontmatter",children:"Frontmatter"}),"\n",(0,s.jsxs)(n.p,{children:["Frontmatter is a YAML like key/value pairing that can be used to store data about a page. ",(0,s.jsx)(n.code,{children:"@next/mdx"})," does ",(0,s.jsx)(n.strong,{children:"not"})," support frontmatter by default, though there are many solutions for adding frontmatter to your MDX content, such as ",(0,s.jsx)(n.a,{href:"https://github.com/jonschlinkert/gray-matter",children:"gray-matter"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["To access page metadata with ",(0,s.jsx)(n.code,{children:"@next/mdx"}),", you can export a meta object from within the ",(0,s.jsx)(n.code,{children:".mdx"})," file:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-md",children:"export const meta = {\nauthor: 'Rich Haines'\n}\n\n# My MDX page\n"})}),"\n",(0,s.jsx)(n.h3,{id:"layouts",children:"Layouts"}),"\n",(0,s.jsx)(n.p,{children:"To add a layout to your MDX page, create a new component and import it into the MDX page. Then you can wrap the MDX page with your layout component:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-md",children:"import { MyComponent, MyLayoutComponent } from 'my-components'\n\nexport const meta = {\nauthor: 'Rich Haines'\n}\n\n# My MDX Page with a Layout\n\nThis is a list in markdown:\n\n- One\n- Two\n- Three\n\nCheckout my React component:\n\n<MyComponent/>\n\nexport default ({ children }) => <MyLayoutComponent meta={meta}>{children}</MyLayoutComponent>\n"})}),"\n",(0,s.jsx)(n.h3,{id:"custom-elements",children:"Custom Elements"}),"\n",(0,s.jsxs)(n.p,{children:["One of the pleasant aspects of using markdown, is that it maps to native ",(0,s.jsx)(n.code,{children:"HTML"})," elements, making writing fast, and intuitive:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-md",children:"# H1 heading\n\n## H2 heading\n\nThis is a list in markdown:\n\n- One\n- Two\n- Three\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The above generates the following ",(0,s.jsx)(n.code,{children:"HTML"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:"<h1>H1 heading</h1>\n\n<h2>H2 heading</h2>\n\n<p>This is a list in markdown:</p>\n\n<ul>\n  <li>One</li>\n  <li>Two</li>\n  <li>Three</li>\n</ul>\n"})}),"\n",(0,s.jsxs)(n.p,{children:["When you want to style your own elements to give a custom feel to your website or application, you can pass in shortcodes. These are your own custom components that map to ",(0,s.jsx)(n.code,{children:"HTML"})," elements. To do this you use the ",(0,s.jsx)(n.code,{children:"MDXProvider"})," and pass a components object as a prop. Each object key in the components object maps to a ",(0,s.jsx)(n.code,{children:"HTML"})," element name."]}),"\n",(0,s.jsxs)(n.p,{children:["To enable you need to specify ",(0,s.jsx)(n.code,{children:'providerImportSource: "@mdx-js/react"'})," in ",(0,s.jsx)(n.code,{children:"next.config.js"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// next.config.js\n\nconst withMDX = require('@next/mdx')({\n  // ...\n  options: {\n    providerImportSource: '@mdx-js/react',\n  },\n})\n"})}),"\n",(0,s.jsx)(n.p,{children:"Then setup the provider in your page"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"// pages/index.js\n\nimport { MDXProvider } from '@mdx-js/react'\nimport Image from 'next/image'\nimport { Heading, InlineCode, Pre, Table, Text } from 'my-components'\n\nconst ResponsiveImage = (props) => (\n  <Image alt={props.alt} layout=\"responsive\" {...props} />\n)\n\nconst components = {\n  img: ResponsiveImage,\n  h1: Heading.H1,\n  h2: Heading.H2,\n  p: Text,\n  pre: Pre,\n  code: InlineCode,\n}\n\nexport default function Post(props) {\n  return (\n    <MDXProvider components={components}>\n      <main {...props} />\n    </MDXProvider>\n  )\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["If you use it across the site you may want to add the provider to ",(0,s.jsx)(n.code,{children:"_app.js"})," so all MDX pages pick up the custom element config."]}),"\n",(0,s.jsx)(n.h2,{id:"helpful-links",children:"Helpful Links"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://mdxjs.com",children:"MDX"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/@next/mdx",children:(0,s.jsx)(n.code,{children:"@next/mdx"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/remarkjs/remark",children:"remark"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/rehypejs/rehype",children:"rehype"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>r});var s=t(7294);const o={},i=s.createContext(o);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);