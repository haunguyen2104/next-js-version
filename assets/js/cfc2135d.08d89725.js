"use strict";(self.webpackChunknext_version=self.webpackChunknext_version||[]).push([[6133],{5480:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>d,toc:()=>c});var t=n(5893),s=n(1151);const o={description:"API reference for `getServerSideProps`. Learn how to fetch data on each request with Next.js."},i="getServerSideProps",d={id:"next-js/v13.0.1/api-reference/data-fetching/get-server-side-props",title:"getServerSideProps",description:"API reference for `getServerSideProps`. Learn how to fetch data on each request with Next.js.",source:"@site/docs/next-js/v13.0.1/api-reference/data-fetching/get-server-side-props.md",sourceDirName:"next-js/v13.0.1/api-reference/data-fetching",slug:"/next-js/v13.0.1/api-reference/data-fetching/get-server-side-props",permalink:"/next-js/v13.0.1/api-reference/data-fetching/get-server-side-props",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/next-js/v13.0.1/api-reference/data-fetching/get-server-side-props.md",tags:[],version:"current",frontMatter:{description:"API reference for `getServerSideProps`. Learn how to fetch data on each request with Next.js."},sidebar:"tutorialSidebar",previous:{title:"getInitialProps",permalink:"/next-js/v13.0.1/api-reference/data-fetching/get-initial-props"},next:{title:"getStaticPaths",permalink:"/next-js/v13.0.1/api-reference/data-fetching/get-static-paths"}},a={},c=[{value:"Context parameter",id:"context-parameter",level:2},{value:"getServerSideProps return values",id:"getserversideprops-return-values",level:2},{value:"<code>props</code>",id:"props",level:3},{value:"<code>notFound</code>",id:"notfound",level:3},{value:"<code>redirect</code>",id:"redirect",level:3},{value:"getServerSideProps with TypeScript",id:"getserversideprops-with-typescript",level:3},{value:"Related",id:"related",level:2}];function l(e){const r={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components},{Details:n}=r;return n||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"getserversideprops",children:"getServerSideProps"}),"\n",(0,t.jsxs)(n,{children:[(0,t.jsx)("summary",{children:(0,t.jsx)("b",{children:"Version History"})}),(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Version"}),(0,t.jsx)(r.th,{children:"Changes"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"v10.0.0"})}),(0,t.jsxs)(r.td,{children:[(0,t.jsx)(r.code,{children:"locale"}),", ",(0,t.jsx)(r.code,{children:"locales"}),", ",(0,t.jsx)(r.code,{children:"defaultLocale"}),", and ",(0,t.jsx)(r.code,{children:"notFound"})," options added."]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"v9.3.0"})}),(0,t.jsxs)(r.td,{children:[(0,t.jsx)(r.code,{children:"getServerSideProps"})," introduced."]})]})]})]})]}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Note"}),": Next.js 13 introduces the ",(0,t.jsx)(r.code,{children:"app/"})," directory (beta). This new directory has support for ",(0,t.jsx)(r.a,{href:"https://beta.nextjs.org/docs/data-fetching/fundamentals",children:"colocated data fetching"})," at the component level, using the new React ",(0,t.jsx)(r.code,{children:"use"})," hook and an extended ",(0,t.jsx)(r.code,{children:"fetch"})," Web API."]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsxs)(r.a,{href:"https://beta.nextjs.org/docs/upgrade-guide",children:["Learn more about incrementally adopting ",(0,t.jsx)(r.code,{children:"app/"})]}),"."]}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["When exporting a function called ",(0,t.jsx)(r.code,{children:"getServerSideProps"})," (Server-Side Rendering) from a page, Next.js will pre-render this page on each request using the data returned by ",(0,t.jsx)(r.code,{children:"getServerSideProps"}),". This is useful if you want to fetch data that changes often, and have the page update to show the most current data."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-js",children:"export async function getServerSideProps(context) {\n  return {\n    props: {}, // will be passed to the page component as props\n  }\n}\n"})}),"\n",(0,t.jsxs)(r.p,{children:["You can import modules in top-level scope for use in ",(0,t.jsx)(r.code,{children:"getServerSideProps"}),". Imports used will ",(0,t.jsx)(r.strong,{children:"not be bundled for the client-side"}),". This means you can write ",(0,t.jsxs)(r.strong,{children:["server-side code directly in ",(0,t.jsx)(r.code,{children:"getServerSideProps"})]}),", including fetching data from your database."]}),"\n",(0,t.jsx)(r.h2,{id:"context-parameter",children:"Context parameter"}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"context"})," parameter is an object containing the following keys:"]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"params"}),": If this page uses a ",(0,t.jsx)(r.a,{href:"/docs/routing/dynamic-routes.md",children:"dynamic route"}),", ",(0,t.jsx)(r.code,{children:"params"})," contains the route parameters. If the page name is ",(0,t.jsx)(r.code,{children:"[id].js"})," , then ",(0,t.jsx)(r.code,{children:"params"})," will look like ",(0,t.jsx)(r.code,{children:"{ id: ... }"}),"."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"req"}),": ",(0,t.jsxs)(r.a,{href:"https://nodejs.org/api/http.html#http_class_http_incomingmessage",children:["The ",(0,t.jsx)(r.code,{children:"HTTP"})," IncomingMessage object"]}),", with an additional ",(0,t.jsx)(r.code,{children:"cookies"})," prop, which is an object with string keys mapping to string values of cookies."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"res"}),": ",(0,t.jsxs)(r.a,{href:"https://nodejs.org/api/http.html#http_class_http_serverresponse",children:["The ",(0,t.jsx)(r.code,{children:"HTTP"})," response object"]}),"."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"query"}),": An object representing the query string, including dynamic route parameters."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"preview"}),": ",(0,t.jsx)(r.code,{children:"preview"})," is ",(0,t.jsx)(r.code,{children:"true"})," if the page is in the ",(0,t.jsx)(r.a,{href:"/docs/advanced-features/preview-mode.md",children:"Preview Mode"})," and ",(0,t.jsx)(r.code,{children:"false"})," otherwise."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"previewData"}),": The ",(0,t.jsx)(r.a,{href:"/docs/advanced-features/preview-mode.md",children:"preview"})," data set by ",(0,t.jsx)(r.code,{children:"setPreviewData"}),"."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"resolvedUrl"}),": A normalized version of the request ",(0,t.jsx)(r.code,{children:"URL"})," that strips the ",(0,t.jsx)(r.code,{children:"_next/data"})," prefix for client transitions and includes original query values."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"locale"})," contains the active locale (if enabled)."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"locales"})," contains all supported locales (if enabled)."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"defaultLocale"})," contains the configured default locale (if enabled)."]}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"getserversideprops-return-values",children:"getServerSideProps return values"}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"getServerSideProps"})," function should return an object with ",(0,t.jsx)(r.strong,{children:"any one of the following"})," properties:"]}),"\n",(0,t.jsx)(r.h3,{id:"props",children:(0,t.jsx)(r.code,{children:"props"})}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"props"})," object is a key-value pair, where each value is received by the page component. It should be a ",(0,t.jsx)(r.a,{href:"https://developer.mozilla.org/en-US/docs/Glossary/Serialization",children:"serializable object"})," so that any props passed, could be serialized with ",(0,t.jsx)(r.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify",children:(0,t.jsx)(r.code,{children:"JSON.stringify"})}),"."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-jsx",children:"export async function getServerSideProps(context) {\n  return {\n    props: { message: `Next.js is awesome` }, // will be passed to the page component as props\n  }\n}\n"})}),"\n",(0,t.jsx)(r.h3,{id:"notfound",children:(0,t.jsx)(r.code,{children:"notFound"})}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"notFound"})," boolean allows the page to return a ",(0,t.jsx)(r.code,{children:"404"})," status and ",(0,t.jsx)(r.a,{href:"/docs/advanced-features/custom-error-page.md#404-page",children:"404 Page"}),". With ",(0,t.jsx)(r.code,{children:"notFound: true"}),", the page will return a ",(0,t.jsx)(r.code,{children:"404"})," even if there was a successfully generated page before. This is meant to support use cases like user-generated content getting removed by its author."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-js",children:"export async function getServerSideProps(context) {\n  const res = await fetch(`https://.../data`)\n  const data = await res.json()\n\n  if (!data) {\n    return {\n      notFound: true,\n    }\n  }\n\n  return {\n    props: { data }, // will be passed to the page component as props\n  }\n}\n"})}),"\n",(0,t.jsx)(r.h3,{id:"redirect",children:(0,t.jsx)(r.code,{children:"redirect"})}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"redirect"})," object allows redirecting to internal and external resources. It should match the shape of ",(0,t.jsx)(r.code,{children:"{ destination: string, permanent: boolean }"}),". In some rare cases, you might need to assign a custom status code for older ",(0,t.jsx)(r.code,{children:"HTTP"})," clients to properly redirect. In these cases, you can use the ",(0,t.jsx)(r.code,{children:"statusCode"})," property instead of the ",(0,t.jsx)(r.code,{children:"permanent"})," property, but not both."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-js",children:"export async function getServerSideProps(context) {\n  const res = await fetch(`https://.../data`)\n  const data = await res.json()\n\n  if (!data) {\n    return {\n      redirect: {\n        destination: '/',\n        permanent: false,\n      },\n    }\n  }\n\n  return {\n    props: {}, // will be passed to the page component as props\n  }\n}\n"})}),"\n",(0,t.jsx)(r.h3,{id:"getserversideprops-with-typescript",children:"getServerSideProps with TypeScript"}),"\n",(0,t.jsxs)(r.p,{children:["The type of ",(0,t.jsx)(r.code,{children:"getServerSideProps"})," can be specified using ",(0,t.jsx)(r.code,{children:"GetServerSideProps"})," from ",(0,t.jsx)(r.code,{children:"next"}),":"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"import { GetServerSideProps } from 'next'\n\ntype Data = { ... }\n\nexport const getServerSideProps: GetServerSideProps<{ data: Data }> = async (context) => {\n  const res = await fetch('https://.../data')\n  const data: Data = await res.json()\n\n  return {\n    props: {\n      data,\n    },\n  }\n}\n"})}),"\n",(0,t.jsxs)(r.p,{children:["If you want to get inferred typings for your props, you can use ",(0,t.jsx)(r.code,{children:"InferGetServerSidePropsType<typeof getServerSideProps>"}),":"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",children:"import { InferGetServerSidePropsType } from 'next'\nimport { GetServerSideProps } from 'next'\n\ntype Data = { ... }\n\nexport const getServerSideProps: GetServerSideProps<{ data: Data }> = async () => {\n  const res = await fetch('https://.../data')\n  const data: Data = await res.json()\n\n  return {\n    props: {\n      data,\n    },\n  }\n}\n\nfunction Page({ data }: InferGetServerSidePropsType<typeof getServerSideProps>) {\n  // will resolve data to type Data\n}\n\nexport default Page\n"})}),"\n",(0,t.jsxs)(r.p,{children:["Implicit typing for ",(0,t.jsx)(r.code,{children:"getServerSideProps"})," will also work properly:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",children:"import { InferGetServerSidePropsType } from 'next'\n\ntype Data = { ... }\n\nexport const getServerSideProps = async () => {\n  const res = await fetch('https://.../data')\n  const data: Data = await res.json()\n\n  return {\n    props: {\n      data,\n    },\n  }\n}\n\nfunction Page({ data }: InferGetServerSidePropsType<typeof getServerSideProps>) {\n  // will resolve data to type Data\n}\n\nexport default Page\n"})}),"\n",(0,t.jsx)(r.h2,{id:"related",children:"Related"}),"\n",(0,t.jsx)(r.p,{children:"For more information on what to do next, we recommend the following sections:"}),"\n",(0,t.jsx)("div",{class:"card",children:(0,t.jsxs)("a",{href:"/docs/basic-features/data-fetching/overview.md",children:[(0,t.jsx)("b",{children:"Data Fetching:"}),(0,t.jsx)("small",{children:"Learn more about data fetching in Next.js."})]})})]})}function h(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},1151:(e,r,n)=>{n.d(r,{Z:()=>d,a:()=>i});var t=n(7294);const s={},o=t.createContext(s);function i(e){const r=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(o.Provider,{value:r},e.children)}}}]);